// <auto-generated />
using System;
using GameDataOCR.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameDataOCR.API.Migrations
{
    [DbContext(typeof(GameDataContext))]
    [Migration("20250920154956_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("GameDataOCR.API.Data.Entities.Industry", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.HasKey("Name");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("GameDataOCR.API.Data.Entities.IndustrySectionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Items")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IndustryName");

                    b.ToTable("IndustrySections");
                });

            modelBuilder.Entity("GameDataOCR.API.Data.Entities.Resource", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<decimal>("NatoBuy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NatoSell")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UssrBuy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UssrSell")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Name");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("GameDataOCR.API.Data.Entities.Workday", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<decimal>("NatoBuy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NatoSell")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("UssrBuy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UssrSell")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("Name");

                    b.ToTable("Workdays");
                });

            modelBuilder.Entity("GameDataOCR.API.Data.Entities.IndustrySectionEntity", b =>
                {
                    b.HasOne("GameDataOCR.API.Data.Entities.Industry", "Industry")
                        .WithMany("Sections")
                        .HasForeignKey("IndustryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("GameDataOCR.API.Data.Entities.Industry", b =>
                {
                    b.Navigation("Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
